/**
 * Thsi webpack config enables fast frontend development with live reload on read AEM pages.
 * It starts a dev serevr, then proxies all requests to AEM, but redirects clientlib requests to
 * the js/css fiels generated by webpack instead.
 *
 * To use, run `npm start` in this directory.
 *
 */

/* eslint @typescript-eslint/no-var-requires: 0 */ // --> OFF
const { merge } = require("webpack-merge");
const common = require("./webpack.common.js");

const PROXY_TARGET = "http://localhost:4502";
const PROXIED_AEM_PATHS = [
  // eslint-disable-next-line max-len
  "/{content,etc,libs,conf,apps,aem,bin,editor.html,assets.html,sites.html,index,services,login,login.servlet,system,graphql,tmp,home,,var,is,mnt,api,resource-status}/**",
  "/*",
  "/etc.clientlibs/*",
  "/etc.clientlibs/{core,cq,granite,acs-commons,tsdk,dam,wcm,foundation}/**",
  "/etc.clientlibs/clientlibs/{core,cq,granite,acs-commons,tsdk,dam,wcm,foundation}/**",
  "/etc.clientlibs/kpmg/clientlibs/clientlib-dependencies**",
  "/etc.clientlibs/kpmg/clientlibs/clientlib-base**",
  "/etc.clientlibs/kpmg/clientlibs/clientlib-site/resources/**",
  "/etc.clientlibs/kpmg/components/editor/**",
];

// Rewrites allow us to use webpack generated assets (js/css) instead of the ones currently deployed on AEM.
const REWRITES = [
  {
    from: /^\/$/,
    to: "/aem/start.html",
  },
  {
    from: /^\/.*clientlib-site.*\.js$/,
    to: "/clientlib-site/site.js",
  },
  {
    from: /^\/.*clientlib-site.*\.css$/,
    to: "/clientlib-site/site.css",
  },
];

module.exports = (env) => {
  const writeToDisk = env && Boolean(env.writeToDisk);

  return merge(common, {
    mode: "development",
    performance: {
      hints: "warning",
      maxAssetSize: 1048576,
      maxEntrypointSize: 1048576,
    },
    output: {
      publicPath: "/",
    },
    target: "web",
    devServer: {
      headers: {
        "X-Content-Type-Options": "nosniff",
      },
      // rewrite request to the dev server to defined paths
      historyApiFallback: {
        index: "/aem/start.html",
        rewrites: REWRITES,
      },
      proxy: [
        {
          // proxy only the specified path to the specified target.
          context: PROXIED_AEM_PATHS,
          target: PROXY_TARGET,
        },
      ],
      client: {
        overlay: {
          errors: true,
          warnings: false,
        },
      },
      watchFiles: ["src/**/*"],
      hot: false,
      devMiddleware: {
        writeToDisk: writeToDisk,
      },
    },
  });
};
